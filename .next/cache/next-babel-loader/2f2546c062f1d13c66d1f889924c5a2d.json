{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport tableLinks from \"../../css/TableTheme\"; // Run with npm run dev\n\nvar Index = function Index(props) {\n  return __jsx(Layout, null, __jsx(Table, {\n    variant: \"dark\",\n    size: \"sm\",\n    striped: true\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Items + \", props.letter.valueOf()))), __jsx(\"tbody\", null, props.items.map(function (item) {\n    return __jsx(\"tr\", {\n      key: item.id\n    }, __jsx(\"td\", null, __jsx(Link, {\n      href: \"/pg/[id]\",\n      as: \"/pg/\".concat(item.id)\n    }, __jsx(\"a\", {\n      style: tableLinks\n    }, item.name))));\n  }))), __jsx(Pagination, null, __jsx(Pagination.Prev, {\n    href: props.prevpg\n  }), __jsx(Pagination.Next, {\n    href: props.nextpg\n  })));\n};\n\nIndex.getInitialProps = function _callee(context) {\n  var perapi, webnav, letter, pgno, res, data, subone, plusone;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          perapi = 'http://172.30.30.117:8000/';\n          webnav = 'http://172.30.30.117:3000/';\n          letter = context.query.letter;\n          pgno = context.query.pgno;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(perapi + letter + '/' + pgno));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          data = _context.sent;\n          // Logic to create a next page to use in the pagination tabs\n          subone = webnav + letter + '/' + (_parseInt(pgno) - 1);\n          plusone = webnav + letter + '/' + (_parseInt(pgno) + 1);\n          console.log(\"Data from personal api: \".concat(data.items.map(function (entry) {\n            return entry.name + \" \" + entry.id;\n          })));\n          console.log(\"Data from plusone and subone: \" + plusone + \" \" + subone);\n          return _context.abrupt(\"return\", {\n            items: data.items.map(function (entry) {\n              return entry;\n            }),\n            letter: letter,\n            pgno: pgno,\n            nextpg: plusone,\n            prevpg: subone\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}